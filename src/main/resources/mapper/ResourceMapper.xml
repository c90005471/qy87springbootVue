<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aaa.dao.ResourceMapper">
  <resultMap id="BaseResultMap" type="com.aaa.entity.Resource">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="open_mode" jdbcType="VARCHAR" property="openMode" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="pid" jdbcType="BIGINT" property="pid" />
    <result column="seq" jdbcType="TINYINT" property="seq" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="opened" jdbcType="TINYINT" property="opened" />
    <result column="resource_type" jdbcType="TINYINT" property="resourceType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <insert id="insert" parameterType="com.aaa.entity.Resource">
    insert into resource (name, url,
      open_mode, description, icon, 
      pid, seq, status, opened, 
      resource_type, create_time)
    values (#{name,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR},
      #{openMode,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}, 
      #{pid,jdbcType=BIGINT}, #{seq,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, #{opened,jdbcType=TINYINT}, 
      #{resourceType,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.aaa.entity.Resource">
    insert into resource
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="openMode != null">
        open_mode,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="seq != null">
        seq,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="opened != null">
        opened,
      </if>
      <if test="resourceType != null">
        resource_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="openMode != null">
        #{openMode,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=BIGINT},
      </if>
      <if test="seq != null">
        #{seq,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="opened != null">
        #{opened,jdbcType=TINYINT},
      </if>
      <if test="resourceType != null">
        #{resourceType,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="findAllResource"  resultMap="BaseResultMap">
        select * from resource
  </select>
  <select id="findAllMenuResource"  resultMap="BaseResultMap">
        select * from resource where resource_type=0
  </select>
  <select id="findChildResourceById" parameterType="long" resultType="java.lang.Long">
    select id from resource r where r.id=#{id} UNION
select id from resource r where r.pid in (select r.id from resource r where r.id=#{id} ) UNION
select id from resource r where r.pid in (select r.id from resource r where r.pid in (select r.id from resource r where r.id=#{id} ))
  </select>
  <delete id="deleteResourceByIds" parameterType="java.util.List">
        delete  from resource where id in
    <foreach collection="list" item="it" index="index" open="(" close=")" separator=",">
        #{it}
    </foreach>
  </delete>
  <select id="findResourceById" parameterType="Long" resultType="java.util.Map">
    select r.id, r.name ,r.url,r.icon,r.seq,r.pid,r.resource_type as resourceType ,rr.name as pname from resource r LEFT JOIN resource rr on r.pid=rr.id  where  r.id=#{id}
  </select>
  <update id="editResource" parameterType="com.aaa.entity.Resource">
      update resource set name=#{name},resource_type=#{resourceType},url=#{url},icon=#{icon},seq=#{seq},pid=#{pid} where id=#{id}
  </update>
</mapper>